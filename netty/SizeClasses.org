* arg <= PooledByteBufAllocator
pageShifts = 13
pageSize = 1 << pageShifts; // 8192

chunkSize = 4194304 = 4 * 1024 * 1024
group = log2(chunkSize) - LOG2_QUANTUM - LOG2_SIZE_CLASS_GROUP + 1; // 17
group << LOG2_SIZE_CLASS_GROUP = 17 << 2 = 17 * 4 = 68

* sizeClasses
LOG2_QUANTUM = 4;

LOG2_SIZE_CLASS_GROUP = 2;
LOG2_MAX_LOOKUP_SIZE = 12;

log2Group = LOG2_QUANTUM; // 4
log2Delta = LOG2_QUANTUM; // 4
ndeltaLimit = 1 << LOG2_SIZE_CLASS_GROUP; // 4

* size = 1 << log2Group + nDelta * (1 << log2Delta)
|     10000 |    10000 |        0 | 0 * 10000  |
|    100000 |    10000 |    10000 | 1 * 10000  |
|    110000 |    10000 |   100000 | 2 * 10000  |
|   1000000 |    10000 |   110000 | 3 * 10000  |
|           |          |          |            |
|   1010000 |  1000000 |    10000 | 1 * 10000  |
|   1100000 |  1000000 |   100000 | 2 * 10000  |
|   1110000 |  1000000 |   110000 | 3 * 10000  |
|  10000000 |  1000000 |  1000000 | 4 * 10000  |
|           |          |          |            |
|  10100000 | 10000000 |   100000 | 1 * 100000 |
|  11000000 | 10000000 |  1000000 | 2 * 100000 |
|  11100000 | 10000000 |  1100000 | 3 * 100000 |
| 100000000 | 10000000 | 10000000 | 4 * 100000 |
|           |          |          |            |

* sizeClasses
[index, log2Group, log2Delta, nDelta, isMultiPageSize, isSubPage, log2DeltaLookup]
[[0, 4, 4, 0, 0, 1, 4], [1, 4, 4, 1, 0, 1, 4], [2, 4, 4, 2, 0, 1, 4], [3, 4, 4, 3, 0, 1, 4],
[4, 6, 4, 1, 0, 1, 4], [5, 6, 4, 2, 0, 1, 4], [6, 6, 4, 3, 0, 1, 4], [7, 6, 4, 4, 0, 1, 4],
[8, 7, 5, 1, 0, 1, 5], [9, 7, 5, 2, 0, 1, 5], [10, 7, 5, 3, 0, 1, 5], [11, 7, 5, 4, 0, 1, 5],
[12, 8, 6, 1, 0, 1, 6], [13, 8, 6, 2, 0, 1, 6], [14, 8, 6, 3, 0, 1, 6], [15, 8, 6, 4, 0, 1, 6],
[16, 9, 7, 1, 0, 1, 7], [17, 9, 7, 2, 0, 1, 7], [18, 9, 7, 3, 0, 1, 7], [19, 9, 7, 4, 0, 1, 7],
[20, 10, 8, 1, 0, 1, 8], [21, 10, 8, 2, 0, 1, 8], [22, 10, 8, 3, 0, 1, 8], [23, 10, 8, 4, 0, 1, 8],
[24, 11, 9, 1, 0, 1, 9], [25, 11, 9, 2, 0, 1, 9], [26, 11, 9, 3, 0, 1, 9], [27, 11, 9, 4, 0, 1, 9],
[28, 12, 10, 1, 0, 1, 0], [29, 12, 10, 2, 0, 1, 0], [30, 12, 10, 3, 0, 1, 0], [31, 12, 10, 4, 1, 1, 0],
[32, 13, 11, 1, 0, 1, 0], [33, 13, 11, 2, 0, 1, 0], [34, 13, 11, 3, 0, 1, 0], [35, 13, 11, 4, 1, 1, 0],
[36, 14, 12, 1, 0, 1, 0], [37, 14, 12, 2, 1, 1, 0], [38, 14, 12, 3, 0, 1, 0], [39, 14, 12, 4, 1, 0, 0],
[40, 15, 13, 1, 1, 0, 0], [41, 15, 13, 2, 1, 0, 0], [42, 15, 13, 3, 1, 0, 0], [43, 15, 13, 4, 1, 0, 0],
[44, 16, 14, 1, 1, 0, 0], [45, 16, 14, 2, 1, 0, 0], [46, 16, 14, 3, 1, 0, 0], [47, 16, 14, 4, 1, 0, 0],
[48, 17, 15, 1, 1, 0, 0], [49, 17, 15, 2, 1, 0, 0], [50, 17, 15, 3, 1, 0, 0], [51, 17, 15, 4, 1, 0, 0],
[52, 18, 16, 1, 1, 0, 0], [53, 18, 16, 2, 1, 0, 0], [54, 18, 16, 3, 1, 0, 0], [55, 18, 16, 4, 1, 0, 0],
[56, 19, 17, 1, 1, 0, 0], [57, 19, 17, 2, 1, 0, 0], [58, 19, 17, 3, 1, 0, 0], [59, 19, 17, 4, 1, 0, 0],
[60, 20, 18, 1, 1, 0, 0], [61, 20, 18, 2, 1, 0, 0], [62, 20, 18, 3, 1, 0, 0], [63, 20, 18, 4, 1, 0, 0],
[64, 21, 19, 1, 1, 0, 0], [65, 21, 19, 2, 1, 0, 0], [66, 21, 19, 3, 1, 0, 0], [67, 21, 19, 4, 1, 0, 0]]
* sizeIdx2sizeTab
[16, 32, 48, 64, 80, 96, 112,
128, 160, 192, 224,
256, 320, 384, 448,
512, 640, 768, 896,
1024, 1280, 1536, 1792,
2048, 2560, 3072, 3584,
4096, 5120, 6144, 7168,
8192, 10240, 12288, 14336,
16384, 20480, 24576, 28672,
32768, 40960, 49152, 57344,
65536, 81920, 98304, 114688,
131072, 163840, 196608, 229376,
262144, 327680, 393216, 458752,
524288, 655360, 786432, 917504,
1048576, 1310720, 1572864, 1835008,
2097152, 2621440, 3145728, 3670016, 4194304]
* pageIdx2sizeTab
[8192, 16384, 24576, 32768, 40960, 49152, 57344, 65536, 81920, 98304, 114688, 131072, 163840, 196608, 229376, 262144, 327680, 393216, 458752, 524288, 655360, 786432, 917504, 1048576, 1310720, 1572864, 1835008, 2097152, 2621440, 3145728, 3670016, 4194304]
* size2idxTab
[0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27]
